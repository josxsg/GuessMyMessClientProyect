//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GuessMyMessClient.MatchmakingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchInfoDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class MatchInfoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DifficultyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPlayers {
            get {
                return this.CurrentPlayersField;
            }
            set {
                if ((this.CurrentPlayersField.Equals(value) != true)) {
                    this.CurrentPlayersField = value;
                    this.RaisePropertyChanged("CurrentPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DifficultyName {
            get {
                return this.DifficultyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyNameField, value) != true)) {
                    this.DifficultyNameField = value;
                    this.RaisePropertyChanged("DifficultyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostUsername {
            get {
                return this.HostUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostUsernameField, value) != true)) {
                    this.HostUsernameField = value;
                    this.RaisePropertyChanged("HostUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchIdField, value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchName {
            get {
                return this.MatchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchNameField, value) != true)) {
                    this.MatchNameField = value;
                    this.RaisePropertyChanged("MatchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPlayers {
            get {
                return this.MaxPlayersField;
            }
            set {
                if ((this.MaxPlayersField.Equals(value) != true)) {
                    this.MaxPlayersField = value;
                    this.RaisePropertyChanged("MaxPlayers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LobbySettingsDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class LobbySettingsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DifficultyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRoundsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DifficultyId {
            get {
                return this.DifficultyIdField;
            }
            set {
                if ((this.DifficultyIdField.Equals(value) != true)) {
                    this.DifficultyIdField = value;
                    this.RaisePropertyChanged("DifficultyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivate {
            get {
                return this.IsPrivateField;
            }
            set {
                if ((this.IsPrivateField.Equals(value) != true)) {
                    this.IsPrivateField = value;
                    this.RaisePropertyChanged("IsPrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchName {
            get {
                return this.MatchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchNameField, value) != true)) {
                    this.MatchNameField = value;
                    this.RaisePropertyChanged("MatchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPlayers {
            get {
                return this.MaxPlayersField;
            }
            set {
                if ((this.MaxPlayersField.Equals(value) != true)) {
                    this.MaxPlayersField = value;
                    this.RaisePropertyChanged("MaxPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRounds {
            get {
                return this.TotalRoundsField;
            }
            set {
                if ((this.TotalRoundsField.Equals(value) != true)) {
                    this.TotalRoundsField = value;
                    this.RaisePropertyChanged("TotalRounds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class OperationResultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchmakingService.IMatchmakingService", CallbackContract=typeof(GuessMyMessClient.MatchmakingService.IMatchmakingServiceCallback))]
    public interface IMatchmakingService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/Connect")]
        void Connect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/Connect")]
        System.Threading.Tasks.Task ConnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/Disconnect")]
        void Disconnect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/GetPublicMatches", ReplyAction="http://tempuri.org/IMatchmakingService/GetPublicMatchesResponse")]
        GuessMyMessClient.MatchmakingService.MatchInfoDto[] GetPublicMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/GetPublicMatches", ReplyAction="http://tempuri.org/IMatchmakingService/GetPublicMatchesResponse")]
        System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.MatchInfoDto[]> GetPublicMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/CreateMatchResponse")]
        GuessMyMessClient.MatchmakingService.OperationResultDto CreateMatch(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/CreateMatchResponse")]
        System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> CreateMatchAsync(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/JoinPublicMatch")]
        void JoinPublicMatch(string username, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/JoinPublicMatch")]
        System.Threading.Tasks.Task JoinPublicMatchAsync(string username, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/JoinPrivateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/JoinPrivateMatchResponse")]
        GuessMyMessClient.MatchmakingService.OperationResultDto JoinPrivateMatch(string username, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/JoinPrivateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/JoinPrivateMatchResponse")]
        System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> JoinPrivateMatchAsync(string username, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/InviteToMatch")]
        void InviteToMatch(string inviterUsername, string invitedUsername, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/InviteToMatch")]
        System.Threading.Tasks.Task InviteToMatchAsync(string inviterUsername, string invitedUsername, string matchId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchmakingServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/ReceiveMatchInvite")]
        void ReceiveMatchInvite(string fromUsername, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/MatchUpdate")]
        void MatchUpdate(GuessMyMessClient.MatchmakingService.MatchInfoDto matchInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/MatchJoined")]
        void MatchJoined(string matchId, GuessMyMessClient.MatchmakingService.OperationResultDto result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/MatchmakingFailed")]
        void MatchmakingFailed(string reason);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/PublicMatchesListUpdated")]
        void PublicMatchesListUpdated(GuessMyMessClient.MatchmakingService.MatchInfoDto[] publicMatches);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchmakingServiceChannel : GuessMyMessClient.MatchmakingService.IMatchmakingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchmakingServiceClient : System.ServiceModel.DuplexClientBase<GuessMyMessClient.MatchmakingService.IMatchmakingService>, GuessMyMessClient.MatchmakingService.IMatchmakingService {
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Connect(string username) {
            base.Channel.Connect(username);
        }
        
        public System.Threading.Tasks.Task ConnectAsync(string username) {
            return base.Channel.ConnectAsync(username);
        }
        
        public void Disconnect(string username) {
            base.Channel.Disconnect(username);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(string username) {
            return base.Channel.DisconnectAsync(username);
        }
        
        public GuessMyMessClient.MatchmakingService.MatchInfoDto[] GetPublicMatches() {
            return base.Channel.GetPublicMatches();
        }
        
        public System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.MatchInfoDto[]> GetPublicMatchesAsync() {
            return base.Channel.GetPublicMatchesAsync();
        }
        
        public GuessMyMessClient.MatchmakingService.OperationResultDto CreateMatch(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings) {
            return base.Channel.CreateMatch(hostUsername, settings);
        }
        
        public System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> CreateMatchAsync(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings) {
            return base.Channel.CreateMatchAsync(hostUsername, settings);
        }
        
        public void JoinPublicMatch(string username, string matchId) {
            base.Channel.JoinPublicMatch(username, matchId);
        }
        
        public System.Threading.Tasks.Task JoinPublicMatchAsync(string username, string matchId) {
            return base.Channel.JoinPublicMatchAsync(username, matchId);
        }
        
        public GuessMyMessClient.MatchmakingService.OperationResultDto JoinPrivateMatch(string username, string matchCode) {
            return base.Channel.JoinPrivateMatch(username, matchCode);
        }
        
        public System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> JoinPrivateMatchAsync(string username, string matchCode) {
            return base.Channel.JoinPrivateMatchAsync(username, matchCode);
        }
        
        public void InviteToMatch(string inviterUsername, string invitedUsername, string matchId) {
            base.Channel.InviteToMatch(inviterUsername, invitedUsername, matchId);
        }
        
        public System.Threading.Tasks.Task InviteToMatchAsync(string inviterUsername, string invitedUsername, string matchId) {
            return base.Channel.InviteToMatchAsync(inviterUsername, invitedUsername, matchId);
        }
    }
}
