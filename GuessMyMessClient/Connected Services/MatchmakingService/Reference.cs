//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GuessMyMessClient.MatchmakingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchInfoDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class MatchInfoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int currentPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string difficultyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string matchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string matchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxPlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int currentPlayers {
            get {
                return this.currentPlayersField;
            }
            set {
                if ((this.currentPlayersField.Equals(value) != true)) {
                    this.currentPlayersField = value;
                    this.RaisePropertyChanged("currentPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string difficultyName {
            get {
                return this.difficultyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.difficultyNameField, value) != true)) {
                    this.difficultyNameField = value;
                    this.RaisePropertyChanged("difficultyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostUsername {
            get {
                return this.hostUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.hostUsernameField, value) != true)) {
                    this.hostUsernameField = value;
                    this.RaisePropertyChanged("hostUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string matchId {
            get {
                return this.matchIdField;
            }
            set {
                if ((object.ReferenceEquals(this.matchIdField, value) != true)) {
                    this.matchIdField = value;
                    this.RaisePropertyChanged("matchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string matchName {
            get {
                return this.matchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.matchNameField, value) != true)) {
                    this.matchNameField = value;
                    this.RaisePropertyChanged("matchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maxPlayers {
            get {
                return this.maxPlayersField;
            }
            set {
                if ((this.maxPlayersField.Equals(value) != true)) {
                    this.maxPlayersField = value;
                    this.RaisePropertyChanged("maxPlayers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LobbySettingsDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class LobbySettingsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int difficultyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isPrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string matchNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int maxPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int roundsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int difficultyId {
            get {
                return this.difficultyIdField;
            }
            set {
                if ((this.difficultyIdField.Equals(value) != true)) {
                    this.difficultyIdField = value;
                    this.RaisePropertyChanged("difficultyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                if ((this.isPrivateField.Equals(value) != true)) {
                    this.isPrivateField = value;
                    this.RaisePropertyChanged("isPrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string matchName {
            get {
                return this.matchNameField;
            }
            set {
                if ((object.ReferenceEquals(this.matchNameField, value) != true)) {
                    this.matchNameField = value;
                    this.RaisePropertyChanged("matchName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int maxPlayers {
            get {
                return this.maxPlayersField;
            }
            set {
                if ((this.maxPlayersField.Equals(value) != true)) {
                    this.maxPlayersField = value;
                    this.RaisePropertyChanged("maxPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rounds {
            get {
                return this.roundsField;
            }
            set {
                if ((this.roundsField.Equals(value) != true)) {
                    this.roundsField = value;
                    this.RaisePropertyChanged("rounds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class OperationResultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchmakingService.IMatchmakingService", CallbackContract=typeof(GuessMyMessClient.MatchmakingService.IMatchmakingServiceCallback))]
    public interface IMatchmakingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/getPublicMatches", ReplyAction="http://tempuri.org/IMatchmakingService/getPublicMatchesResponse")]
        GuessMyMessClient.MatchmakingService.MatchInfoDto[] getPublicMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/getPublicMatches", ReplyAction="http://tempuri.org/IMatchmakingService/getPublicMatchesResponse")]
        System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.MatchInfoDto[]> getPublicMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/createMatch", ReplyAction="http://tempuri.org/IMatchmakingService/createMatchResponse")]
        GuessMyMessClient.MatchmakingService.OperationResultDto createMatch(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/createMatch", ReplyAction="http://tempuri.org/IMatchmakingService/createMatchResponse")]
        System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> createMatchAsync(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/joinPublicMatch")]
        void joinPublicMatch(string username, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/joinPublicMatch")]
        System.Threading.Tasks.Task joinPublicMatchAsync(string username, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/joinPrivateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/joinPrivateMatchResponse")]
        GuessMyMessClient.MatchmakingService.OperationResultDto joinPrivateMatch(string username, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/joinPrivateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/joinPrivateMatchResponse")]
        System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> joinPrivateMatchAsync(string username, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/inviteToMatch")]
        void inviteToMatch(string inviterUsername, string invitedUsername, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/inviteToMatch")]
        System.Threading.Tasks.Task inviteToMatchAsync(string inviterUsername, string invitedUsername, string matchId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchmakingServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/receiveMatchInvite")]
        void receiveMatchInvite(string fromUsername, string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/matchUpdate")]
        void matchUpdate(GuessMyMessClient.MatchmakingService.MatchInfoDto matchInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/matchJoined")]
        void matchJoined(string matchId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/matchmakingFailed")]
        void matchmakingFailed(string reason);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchmakingServiceChannel : GuessMyMessClient.MatchmakingService.IMatchmakingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchmakingServiceClient : System.ServiceModel.DuplexClientBase<GuessMyMessClient.MatchmakingService.IMatchmakingService>, GuessMyMessClient.MatchmakingService.IMatchmakingService {
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public GuessMyMessClient.MatchmakingService.MatchInfoDto[] getPublicMatches() {
            return base.Channel.getPublicMatches();
        }
        
        public System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.MatchInfoDto[]> getPublicMatchesAsync() {
            return base.Channel.getPublicMatchesAsync();
        }
        
        public GuessMyMessClient.MatchmakingService.OperationResultDto createMatch(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings) {
            return base.Channel.createMatch(hostUsername, settings);
        }
        
        public System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> createMatchAsync(string hostUsername, GuessMyMessClient.MatchmakingService.LobbySettingsDto settings) {
            return base.Channel.createMatchAsync(hostUsername, settings);
        }
        
        public void joinPublicMatch(string username, string matchId) {
            base.Channel.joinPublicMatch(username, matchId);
        }
        
        public System.Threading.Tasks.Task joinPublicMatchAsync(string username, string matchId) {
            return base.Channel.joinPublicMatchAsync(username, matchId);
        }
        
        public GuessMyMessClient.MatchmakingService.OperationResultDto joinPrivateMatch(string username, string matchCode) {
            return base.Channel.joinPrivateMatch(username, matchCode);
        }
        
        public System.Threading.Tasks.Task<GuessMyMessClient.MatchmakingService.OperationResultDto> joinPrivateMatchAsync(string username, string matchCode) {
            return base.Channel.joinPrivateMatchAsync(username, matchCode);
        }
        
        public void inviteToMatch(string inviterUsername, string invitedUsername, string matchId) {
            base.Channel.inviteToMatch(inviterUsername, invitedUsername, matchId);
        }
        
        public System.Threading.Tasks.Task inviteToMatchAsync(string inviterUsername, string invitedUsername, string matchId) {
            return base.Channel.inviteToMatchAsync(inviterUsername, invitedUsername, matchId);
        }
    }
}
