//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GuessMyMessClient.GameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerScoreDto", Namespace="http://schemas.datacontract.org/2004/07/GuessMyMessServer.Contracts.DataContracts" +
        "")]
    [System.SerializableAttribute()]
    public partial class PlayerScoreDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> rankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> rank {
            get {
                return this.rankField;
            }
            set {
                if ((this.rankField.Equals(value) != true)) {
                    this.rankField = value;
                    this.RaisePropertyChanged("rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameService", CallbackContract=typeof(GuessMyMessClient.GameService.IGameServiceCallback))]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/selectWord")]
        void selectWord(string username, string matchId, string selectedWord);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/selectWord")]
        System.Threading.Tasks.Task selectWordAsync(string username, string matchId, string selectedWord);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/submitDrawing")]
        void submitDrawing(string username, string matchId, byte[] drawingData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/submitDrawing")]
        System.Threading.Tasks.Task submitDrawingAsync(string username, string matchId, byte[] drawingData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/submitGuess")]
        void submitGuess(string username, string matchId, string guess);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/submitGuess")]
        System.Threading.Tasks.Task submitGuessAsync(string username, string matchId, string guess);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/sendInGameChatMessage")]
        void sendInGameChatMessage(string username, string matchId, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/sendInGameChatMessage")]
        System.Threading.Tasks.Task sendInGameChatMessageAsync(string username, string matchId, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onRoundStart")]
        void onRoundStart(int roundNumber, string[] wordOptions);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onDrawingPhaseStart")]
        void onDrawingPhaseStart(int durationSeconds);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onGuessingPhaseStart")]
        void onGuessingPhaseStart(byte[] drawingData, string artistUsername);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onPlayerGuessedCorrectly")]
        void onPlayerGuessedCorrectly(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onTimeUpdate")]
        void onTimeUpdate(int remainingSeconds);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onRoundEnd")]
        void onRoundEnd(GuessMyMessClient.GameService.PlayerScoreDto[] roundScores, string correctWord);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/onGameEnd")]
        void onGameEnd(GuessMyMessClient.GameService.PlayerScoreDto[] finalScores);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : GuessMyMessClient.GameService.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.DuplexClientBase<GuessMyMessClient.GameService.IGameService>, GuessMyMessClient.GameService.IGameService {
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void selectWord(string username, string matchId, string selectedWord) {
            base.Channel.selectWord(username, matchId, selectedWord);
        }
        
        public System.Threading.Tasks.Task selectWordAsync(string username, string matchId, string selectedWord) {
            return base.Channel.selectWordAsync(username, matchId, selectedWord);
        }
        
        public void submitDrawing(string username, string matchId, byte[] drawingData) {
            base.Channel.submitDrawing(username, matchId, drawingData);
        }
        
        public System.Threading.Tasks.Task submitDrawingAsync(string username, string matchId, byte[] drawingData) {
            return base.Channel.submitDrawingAsync(username, matchId, drawingData);
        }
        
        public void submitGuess(string username, string matchId, string guess) {
            base.Channel.submitGuess(username, matchId, guess);
        }
        
        public System.Threading.Tasks.Task submitGuessAsync(string username, string matchId, string guess) {
            return base.Channel.submitGuessAsync(username, matchId, guess);
        }
        
        public void sendInGameChatMessage(string username, string matchId, string message) {
            base.Channel.sendInGameChatMessage(username, matchId, message);
        }
        
        public System.Threading.Tasks.Task sendInGameChatMessageAsync(string username, string matchId, string message) {
            return base.Channel.sendInGameChatMessageAsync(username, matchId, message);
        }
    }
}
