<Window x:Class="GuessMyMessClient.View.Lobby.LobbyView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GuessMyMessClient.View.Lobby"
        mc:Ignorable="d"
        xmlns:language="clr-namespace:GuessMyMessClient.Properties.Langs"
        xmlns:vm="clr-namespace:GuessMyMessClient.ViewModel.Lobby"
        d:DataContext="{d:DesignInstance Type=vm:LobbyViewModel, IsDesignTimeCreatable=True}"
        Title="Lobby" Height="600" Width="950"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        WindowState="Maximized"
        WindowStyle="None">
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/Resources/Images/background.jpeg" Stretch="UniformToFill"/>
        </Grid.Background>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,5,0">

            <Button Content="—" Width="30" Height="30" Margin="5" Style="{StaticResource BlueButton}"
                    Command="{Binding MinimizeWindowCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" ToolTip="{x:Static language:Lang.globalBtnMinimize}"/>

            <Button Content="☐" Width="30" Height="30" Margin="5" Style="{StaticResource GreenButton}"
                    Command="{Binding MaximizeWindowCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" ToolTip="{x:Static language:Lang.globalBtnResize}"/>

            <Button Content="X" Width="30" Height="30" Margin="5" Style="{StaticResource RedButton}"
                    Command="{Binding CloseWindowCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" ToolTip="{x:Static language:Lang.globalBtnClose}"/>

        </StackPanel>

        <Image Source="/Resources/Images/title.png" Width="400" 
               VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,60,0,0"/>

        <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,20">
            <Button x:Name="ConfigurationButton" Command="{Binding SettingsCommand}" ToolTip="{x:Static language:Lang.globalBtnConfiguration}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource SettingsButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsConfigurationPopupOpen}">
                                <Setter Property="Background" Value="#D3D3D3"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Resources/Images/settings.png" Width="30"/>
            </Button>
            <Button x:Name="FriendsButton" Command="{Binding FriendsCommand}" ToolTip="{x:Static language:Lang.socialLbFriends}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource FriendsButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFriendsPopupOpen}">
                                <Setter Property="Background" Value="#87CEEB"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Resources/Images/friends.png" Width="30"/>
            </Button>
            <Button x:Name="EditProfileButton" ToolTip="{x:Static language:Lang.globalBtnEditProfile}"
                    Command="{Binding EditProfileCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource EditProfileButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsProfilePopupOpen}" Value="True">
                                <Setter Property="Background" Value="#FF8C9A"/>
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="/Resources/Images/editProfile.png" Width="30"/>
            </Button>
        </StackPanel>

        <Button Style="{StaticResource ChatButton}" Command="{Binding ChatCommand}" ToolTip="{x:Static language:Lang.globalBtnChat}"
                VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10">
            <Image Source="/Resources/Images/chat.png" Width="30"/>
        </Button>

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,50,0,0">
            <Grid Width="220" Height="220">
                <Ellipse Fill="LightGray" Stroke="Black" StrokeThickness="3"/>
                <Image Source="{Binding UserAvatar}" Width="200" Height="200" Stretch="UniformToFill" Margin="10" />
                <Button Style="{StaticResource EditButtonStyle}" Width="45" Height="45" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,-5,-5"
                        Command="{Binding SelectAvatarCommand}"
                        ToolTip="{x:Static language:Lang.globalBtnEditAvatar}"/>
            </Grid>
            <TextBox Text="{Binding Username, Mode=OneWay}" 
                     Style="{StaticResource InputField}"
                     IsReadOnly="True"
                     TextAlignment="Center"
                     FontWeight="Bold"
                     FontSize="14"
                     Width="300"
                     Margin="0,10,0,0"/>
        </StackPanel>

        <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="20">
            <Button Style="{StaticResource YellowButton}" Command="{Binding PlayCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Resources/Images/play.png" Height="20" Margin="0,0,10,0"/>
                    <TextBlock Text="{x:Static language:Lang.lobbyBtnPlay}" VerticalAlignment="Center"/>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource BlueButton}" Command="{Binding CreateGameCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Resources/Images/create.png" Height="20" Margin="0,0,10,0"/>
                    <TextBlock Text="{x:Static language:Lang.lobbyBtnCreateGame}" VerticalAlignment="Center"/>
                </StackPanel>
            </Button>
        </StackPanel>

        <Popup x:Name="ProfilePopup"
               PlacementTarget="{Binding ElementName=EditProfileButton}"
               Placement="Right"
               AllowsTransparency="True"
               StaysOpen="False" 
               IsOpen="{Binding IsProfilePopupOpen, Mode=TwoWay}">

            <local:ProfileView DataContext="{Binding ProfileViewModel}"/>

        </Popup>

        <Popup x:Name="FriendsPopup"
               PlacementTarget="{Binding ElementName=FriendsButton}"
               Placement="Right"
               AllowsTransparency="True"
               StaysOpen="False" 
               IsOpen="{Binding IsFriendsPopupOpen, Mode=TwoWay}">

            <local:FriendsView DataContext="{Binding FriendsViewModel}"/>

        </Popup>

        <Popup x:Name="ConfigurationPopup"
               PlacementTarget="{Binding ElementName=ConfigurationButton}"
               Placement="Right"
               AllowsTransparency="True"
               StaysOpen="False" 
               IsOpen="{Binding IsConfigurationPopupOpen, Mode=TwoWay}">

            <local:ConfigurationView DataContext="{Binding ConfigurationViewModel}"/>

        </Popup>
    </Grid>
</Window>
